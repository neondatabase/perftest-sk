- name: Ensure dependencies (Debian)
  apt:
    update_cache: yes
    force_apt_get: yes
    autoremove: yes
    pkg:
    - libreadline-dev
    - openssl
    - libseccomp-dev
    - gnupg
    - tmux
    - fio
    - ca-certificates
    - curl
    - gnupg
    - lsb-release
    - git
    - htop
    - automake
    - libtool
    - build-essential
    - bison
    - flex
    - libreadline-dev
    - zlib1g-dev
    - libxml2-dev
    - libcurl4-openssl-dev
    - libsystemd-dev
    - rsync
    # - pkg-config # rust openssl-sys needs pkg-config
    # - libclang-dev # rust rocksdb
    # - clang # rust rocksdb
  become: true

- name: Install prometheus-node-exporter
  apt:
    name: prometheus-node-exporter
    state: latest
  become: true

# Install docker
- name: Add apt signing key from official docker repo
  apt_key:
    url: https://download.docker.com/linux/debian/gpg
    state: present
  become: true
  when: use_docker

- name: Add docker official repository for Debian Buster
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/debian buster stable
    state: present
  become: true
  when: use_docker

- name: Install docker
  apt:
    pkg:
    - docker-ce
    state: present
  become: true
  when: use_docker

- name: Gather facts
  ansible.builtin.setup:
    gather_timeout: 30

# Fetch binaries from dockerhub, if that's faster than copying archive
- name: Copy binaries script
  copy:
    src: ./get_binaries.sh
    dest: "{{ansible_env.HOME}}/get_binaries.sh"
    mode: '0755'
  tags:
  - binaries
  become: true
  when: use_docker

- name: Download binaries from zenithdb/zenith:latest
  shell: ./get_binaries.sh
  args:
    chdir: "{{ansible_env.HOME}}"
  tags:
  - binaries
  become: true
  when: use_docker

- name: Extract Zenith binaries from zenith_install.tar.gz into /usr/local
  ansible.builtin.unarchive:
    src: "{{ansible_env.HOME}}/zenith_install.tar.gz"
    dest: /usr/local
    remote_src: true
  tags:
  - binaries
  become: true
  when: use_docker

# Upload binaries if they're placed locally
- name: Extract Zenith binaries from zenith_install.tar.gz into /usr/local
  ansible.builtin.unarchive:
    src: zenith_install.tar.gz
    dest: /usr/local
  tags:
  - binaries
  become: true
  when: not use_docker

# Run ldconfig to update library cache
- name: Run ldconfig
  shell: ldconfig
  become: true
