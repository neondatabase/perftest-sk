#
# Deploy binaries and all other stuff useful for running performance tests on real-like deployments
#
---

# Common tasks for both safekeepers and pageservers, such as downloading binaries and installing dependencies
- hosts: all

  vars:
    # If this is true, binaries will be downloaded from the latest stable docker build
    use_docker: true

  tasks:

  - name: Ensure dependencies (Debian)
    apt:
      update_cache: yes
      force_apt_get: yes
      autoremove: yes
      pkg:
      - libreadline-dev
      - openssl
      - libseccomp-dev
      - gnupg
      - tmux
      - fio
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
      - git
      - htop
      # - pkg-config # rust openssl-sys needs pkg-config
      # - libclang-dev # rust rocksdb
      # - clang # rust rocksdb
    become: true

  - name: Install prometheus-node-exporter
    apt:
      name: prometheus-node-exporter
      state: latest
    become: true

  # Install docker
  - name: Add apt signing key from official docker repo
    apt_key:
      url: https://download.docker.com/linux/debian/gpg
      state: present
    become: true
    when: use_docker

  - name: Add docker official repository for Debian Buster
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/debian buster stable
      state: present
    become: true
    when: use_docker

  - name: Install docker
    apt:
      pkg:
      - docker-ce
      state: present
    become: true
    when: use_docker

  # Fetch binaries from dockerhub, if that's faster than copying archive
  - name: Copy binaries script
    copy:
      src: ./get_binaries.sh
      dest: "{{ansible_env.HOME}}/get_binaries.sh"
      mode: '0755'
    tags:
    - binaries
    become: true
    when: use_docker

  - name: Download binaries from zenithdb/zenith:latest
    shell: ./get_binaries.sh
    args:
      chdir: "{{ansible_env.HOME}}"
    tags:
    - binaries
    become: true
    when: use_docker

  - name: Extract Zenith binaries from zenith_install.tar.gz into /usr/local
    ansible.builtin.unarchive:
      src: "{{ansible_env.HOME}}/zenith_install.tar.gz"
      dest: /usr/local
      remote_src: true
    tags:
    - binaries
    become: true
    when: use_docker

  # Upload binaries if they're places locally
  - name: Extract Zenith binaries from zenith_install.tar.gz into /usr/local
    ansible.builtin.unarchive:
      src: zenith_install.tar.gz
      dest: /usr/local
    tags:
    - binaries
    become: true
    when: not use_docker


- hosts: safekeepers

  tasks:
  - name: Import safekeepers tasks
    import_tasks: ../safekeepers/deploy.yml

  
- hosts: compute

  vars:
    pg_base: /var/db/postgres/

  tasks:
  - name: Import compute tasks
    import_tasks: ../compute/deploy.yml


# reuse compute to deploy prometheus
- hosts: compute
  roles:
  - cloudalchemy.prometheus
  tags: prometheus
  vars:
    prometheus_targets:
      node:
      # node-exporter for compute
      - targets: "{{ groups['compute']|map('extract', hostvars, ['private_ip']) | map('regex_replace', '$', ':9100') | list }}"
        labels:
          env: compute
      # node-exporter for safekeepers
      - targets: "{{ groups['safekeepers']|map('extract', hostvars, ['private_ip']) | map('regex_replace', '$', ':9100') | list }}"
        labels:
          env: safekeepers
      # safekeepers native metrics, such as LSNs
      - targets: "{{ groups['safekeepers']|map('extract', hostvars, ['private_ip']) | map('regex_replace', '$', ':7676') | list }}"
        labels:
          env: safekeepers
    prometheus_web_listen_address: "{{ private_ip }}:8080"
    prometheus_global:
      scrape_interval: 5s
      scrape_timeout: 5s
      evaluation_interval: 5s
