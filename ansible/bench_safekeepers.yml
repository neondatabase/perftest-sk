#
# Run pgbench for compute+safekeepers
#
---

- hosts: all

  tasks:
  - name: Check that postgres processes are not running
    shell: "pgrep postgres"
    register: postgres_processes
    failed_when: postgres_processes.rc != 1

- hosts: safekeepers

  tasks:
  - name: Ensure safekeeper systemd service is running
    ansible.builtin.systemd:
      name: safekeeper
      state: started
    become: true

- hosts: compute

  tasks:
  - name: Ensure there are no files from previous runs
    shell: "test -f pgbench_init.log"
    args:
      chdir: "{{ main_dir }}/compute"
    register: log_exists
    failed_when: log_exists.rc != 1
    become: true

  - name: Start postgres for compute
    ansible.builtin.shell: |
      runuser -u postgres -- pg_ctl start -w -l pg.log
    args:
      chdir: "{{ main_dir }}/compute"
    environment:
      PGDATA: "{{ main_dir }}/compute"
      PGUSER: zenith_admin
      PGDATABASE: postgres
    become: true

  - name: Run benchmark
    ansible.builtin.shell: |
      tmux kill-session -t bench || true

      tmux new-session -d -s bench bash \
        && tmux split-window -h -t bench bash \
        && tmux send -t bench:0.0 "./run_benchmark.sh" C-m

      sleep 5 && cat pgbench_init.log
    args:
      chdir: "{{ main_dir }}/compute"
    environment:
      PGDATA: "{{ main_dir }}/compute"
      PGUSER: zenith_admin
      PGDATABASE: postgres
    become: true
    # TODO: become_user don't work, need some other way to run scripts from postgres user
    # become_user: postgres
